"use strict";(self.webpackChunknotus_docs=self.webpackChunknotus_docs||[]).push([[8220],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return k}});var a=n(7294);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,a,t=function(e,r){if(null==e)return{};var n,a,t={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var p=a.createContext({}),s=function(e){var r=a.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=s(e.components);return a.createElement(p.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),k=t,m=d["".concat(p,".").concat(k)]||d[k]||c[k]||i;return n?a.createElement(m,l(l({ref:r},u),{},{components:n})):a.createElement(m,l({ref:r},u))}));function k(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in r)hasOwnProperty.call(r,p)&&(o[p]=r[p]);o.originalType=e,o.mdxType="string"==typeof e?e:t,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9316:function(e,r,n){n.r(r),n.d(r,{assets:function(){return u},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var a=n(7462),t=n(3366),i=(n(7294),n(3905)),l=["components"],o={},p="Sasha",s={unversionedId:"Overview/Basics/Concept/Cryptography/Hash/Sasha",id:"Overview/Basics/Concept/Cryptography/Hash/Sasha",title:"Sasha",description:"Sasha hash metodu iki turdan olu\u015fmaktad\u0131r. \u0130\xe7inde Ripemd160, SHA1, MD5 ve Blake2B hash yap\u0131lar\u0131n\u0131 kullanmaktad\u0131r.",source:"@site/docs/Overview/Basics/Concept/Cryptography/Hash/Sasha.md",sourceDirName:"Overview/Basics/Concept/Cryptography/Hash",slug:"/Overview/Basics/Concept/Cryptography/Hash/Sasha",permalink:"/en/Overview/Basics/Concept/Cryptography/Hash/Sasha",draft:!1,editUrl:"https://github.com/Notus-Network/Notus-Docs/tree/main/docs/Overview/Basics/Concept/Cryptography/Hash/Sasha.md",tags:[],version:"current",frontMatter:{},sidebar:"overview",previous:{title:"\u0130\u015flem",permalink:"/en/Overview/Basics/Concept/Transaction"},next:{title:"A\u011f",permalink:"/en/Overview/Basics/Concept/Network/intro"}},u={},c=[{value:"Turlara Ba\u015flamadan \xd6nce",id:"turlara-ba\u015flamadan-\xf6nce",level:2},{value:"\u0130lk Tur",id:"i\u0307lk-tur",level:2},{value:"\u0130kinci Tur",id:"i\u0307kinci-tur",level:2},{value:"\xc7\u0131kt\u0131",id:"\xe7\u0131kt\u0131",level:2}],d={toc:c};function k(e){var r=e.components,n=(0,t.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sasha"},"Sasha"),(0,i.kt)("p",null,"Sasha hash metodu iki turdan olu\u015fmaktad\u0131r. \u0130\xe7inde Ripemd160, SHA1, MD5 ve Blake2B hash yap\u0131lar\u0131n\u0131 kullanmaktad\u0131r.\nHer iki turda da i\xe7inde d\xf6rt tane toplama i\u015flemi bar\u0131nd\u0131rmaktad\u0131r."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function SashaHash(data: string, reverseArray: boolean = true, replaceChar: boolean = true): string\n")),(0,i.kt)("p",null,"Referans: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Notus-Network/NotusJS/blob/main/src/core/hash.ts"},"src/core/hash.ts:11")),(0,i.kt)("h2",{id:"turlara-ba\u015flamadan-\xf6nce"},"Turlara Ba\u015flamadan \xd6nce"),(0,i.kt)("p",null,"Datan\u0131n ters \xe7evrilmesi isteniyorsa, ters \xe7evrilir. \xd6rnek olarak:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Girdi: NRHf747BCHuFvpzDWpxrXvKm1hNBruM7eNmUH4")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"\xc7\u0131kt\u0131: 4HUmNe7MurBNh1mKvXrxpWDzpvFuHCB747fHRN")),(0,i.kt)("p",null,"Blake2B ile yaz\u0131n\u0131n hash'i al\u0131n\u0131r, 16'l\u0131k karakterlere b\xf6l\xfcnerek bir dizi elde edilir."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"var Blake2BArray = SplitByLength(Blake2BHash(data), 16);")),(0,i.kt)("p",null,"MD5 ile yaz\u0131n\u0131n hash'i al\u0131n\u0131r, 4'l\xfck karakterlere b\xf6l\xfcnerek bir dizi elde edilir."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"var Md5Array = SplitByLength(Md5Hash(data), 4);")),(0,i.kt)("p",null,"SHA1 ile yaz\u0131n\u0131n hash'i al\u0131n\u0131r, 5'lik karakterlere b\xf6l\xfcnerek bir dizi elde edilir."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"var Sha1Array = SplitByLength(Sha1Hash(data), 5);")),(0,i.kt)("p",null,"Ripemd160 ile yaz\u0131n\u0131n hash'i al\u0131n\u0131r, 5'lik karakterlere b\xf6l\xfcnerek bir dizi elde edilir."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"var Ripemd160Array = SplitByLength(Ripemd160Hash(data), 5);")),(0,i.kt)("h2",{id:"i\u0307lk-tur"},"\u0130lk Tur"),(0,i.kt)("p",null,"\u0130lk turda Blake2B, MD5, SHA1 ve Ripemd160 dizilerinin n'inci eleman\u0131 toplan\u0131r."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"for (var i = 0; i < 8; i++) {\n    if (i < 4) {\n      res =\n        res + Blake2BArray[i] + Md5Array[i] + Sha1Array[i] + Ripemd160Array[i];\n    }\n...\n")),(0,i.kt)("h2",{id:"i\u0307kinci-tur"},"\u0130kinci Tur"),(0,i.kt)("p",null,"\u0130kinci turda \xf6nceki toplanan de\u011ferler ters \u015fekilde toplan\u0131r. S\u0131ra; Ripemd160, SHA1, MD5 ve Blake2B olur."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"else {\n      res =\n        res + Ripemd160Array[i] + Sha1Array[i] + Md5Array[i] + Blake2BArray[i];\n    }\n  }\n")),(0,i.kt)("h2",{id:"\xe7\u0131kt\u0131"},"\xc7\u0131kt\u0131"),(0,i.kt)("p",null,'\xc7\u0131kt\u0131n\u0131n e\u011fer "',(0,i.kt)("em",{parentName:"p"},"Default Hex Yaz\u0131s\u0131"),'" olmas\u0131 isteniyorsa \xfc\xe7\xfcnc\xfc parametre true olarak verilir. Bu sayede ReplaceChar fonksiyonu ile belirli karakterlerin de\u011fi\u015fimi yap\u0131l\u0131r.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const DefaultHexAlphabetString = "0123456789abcdef";\nconst SimpleHashAlphabetForHexResult = "fedcba9876543210";\n\nfunction ReplaceChar(sourceText: string, fromText: string, toText: string) {\n  var input = sourceText.split("");\n  var replaced: boolean[] = [];\n  for (var j = 0; j < input.length; j++) replaced[j] = false;\n  for (var i = 0; i < fromText.length; i++) {\n    for (var j = 0; j < input.length; j++) {\n      if (replaced[j] === false && input[j] === fromText[i]) {\n        input[j] = toText[i];\n        replaced[j] = true;\n      }\n    }\n  }\n  return input.join("");\n}\n')),(0,i.kt)("p",null,"E\u011fer istenmiyorsa \xe7\u0131kt\u0131 oldu\u011fu gibi geri d\xf6nd\xfcr\xfcl\xfcr."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"return res;\n")))}k.isMDXComponent=!0}}]);